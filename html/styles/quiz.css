/* answers component */
.answers {
  display: grid;
  grid-template-rows: repeat(5, auto);
  gap: 10px;
  margin: 2rem 0;
  grid-auto-flow: column;
}

@media only screen and (max-width: 1024px) {
  .answers {
    grid-auto-flow: unset;
    margin: 1rem 0;
  }
}

.answer {
  width: 100%;
  height: 58px;
  background: var(--questionBG);
  display: flex;
  align-items: center;
  font-weight: 500;
  padding: 0 1.1rem;
  cursor: pointer;
  border-radius: 4px;
}

.answer:hover {
  background: hsla(229, 20%, 57%, 0.253);
}

.answer input {
  margin-right: 15px;
}

.answer span {
  width: 100%;
}

.answer span:nth-of-type(2) {
  text-align: right;
  color: #4e536f;
  font-size: 14px;
}

.correct {
  background: var(--successGreen) !important;
  font-weight: 600;
}

.wrong {
  background: var(--dangerRed) !important;
  font-weight: 600;
}

/* progress bar component */
.progressBar {
  width: calc(100vw - 100px);
  height: 65px;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 20px;
  margin: 0 auto;
  background: #fff;
  border: 1px solid #e5e5e5;
  border-radius: 8px;
  display: grid;
  justify-content: space-between;
  align-items: center;
  grid-template-columns: 50px 1fr auto;
  gap: 20px;
}

.progressBar .backButton {
  width: 50px;
  height: 50px;
  border-radius: 8px;
  margin-left: 10px;
  background: #47f5901c;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

.progressBar .backButton:hover {
  background: #47f5953a;
}

@media only screen and (max-width: 1024px) {
  .progressBar {
    width: calc(100vw - 60px);
    bottom: 10px;
  }

  .progressBar .backButton {
    width: 40px;
    height: 40px;
  }

  .next span:first-child {
    display: none;
  }
}

.rangeArea {
  width: 100%;
  position: relative;
  margin: 0 auto;
}

.rangeBody {
  width: 100%;
  height: 4px;
  margin: 0 auto;
  background: #e4e8ee;
  border: none;
  outline: none;
  border-radius: 20px;
}

.progress {
  height: 4px;
  background: var(--fontPrimary);
  border-radius: 20px;
  position: relative;
  transition: width 0.3s ease;
}

.progress::after {
  content: "";
  height: 12px;
  width: 12px;
  position: absolute;
  right: 0;
  border-radius: 100%;
  background-color: var(--fontPrimary);
  transform: translateY(-50%);
  top: 50%;
  cursor: pointer;
}

.tooltip {
  position: absolute;
  top: -70px;
  left: calc(70% - 65px);
  width: 130px;
  background-color: var(--fontPrimary);
  color: #fff;
  padding: 0.8rem 1rem;
  border-radius: 7px;
  font-size: 12px;
  font-weight: 600;
  display: none;
}

.tooltip::after {
  content: "";
  width: 15px;
  height: 15px;
  background-color: var(--fontPrimary);
  border-radius: 4px;
  bottom: 0;
  left: 50%;
  position: absolute;
  transform: rotate(45deg) translate(-50%, 100%);
}

/* mini player component */
.miniPlayer {
  width: 320px;
  position: fixed;
  bottom: 100px;
  right: 50px;
  background-color: #fff;
  padding: 10px;
  box-sizing: border-box;
  border: 1px solid hsl(0, 0%, 86%);
  border-radius: 5px;
}

.miniPlayer img {
  width: 300px;
  aspect-ratio: 16 / 9;
  object-fit: cover;
  animation: miniplayerAnim 0.3s ease forwards;
}

.open {
  display: none;
}

.close {
  display: block;
  position: absolute;
  right: -8px;
  top: -10px;
  z-index: 10;
  background-color: #fff;
  border: 1px solid #e5e5e5;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  line-height: 20px;
  padding: 5px 0 0 3px;
}

.close:hover {
  color: #666666;
  cursor: pointer;
  outline: 0;
}

@keyframes miniplayerAnim {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

.miniPlayer p {
  font-weight: 500;
  font-size: 14px;
  margin: 10px 0;
  color: var(--fontPrimary);
}

@media only screen and (max-width: 1536px) {
  .miniPlayer {
    transition: transform 0.3s ease;
  }
}

.floatingBtn {
  width: 60px;
  height: 60px;
  bottom: 80px;
  right: 10px;
  overflow: hidden;
  border-radius: 50px;
  background-color: var(--fontPrimary);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  cursor: pointer;
  user-select: none;
}

.floatingBtn:hover {
  background-color: var(--successGreen);
}

.floatingBtn:hover span {
  color: var(--fontPrimary);
}

.floatingBtn p {
  display: none;
}

.floatingBtn img {
  transform: scale(0);
  display: none;
}

.floatingBtn span {
  color: var(--successGreen);
  font-weight: 500;
}

.floatingBtn .open {
  display: block;
}

.floatingBtn .close {
  display: none;
}
